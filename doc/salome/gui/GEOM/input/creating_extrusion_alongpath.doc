/*!

\page create_extrusion_alongpath_page Pipe Construction

To generate a \b Pipe in the <b>Main Menu</b> select <b>New Entity - > Generation  - > Extrusion along a path</b>

\n Firstly, to create an extruded \b Pipe shape, you can define the <b>Base
Object</b> (vertex, edge, planar wire, face or shell), which will be extruded
and the <b>Path Object</b> (edge or wire) along which the <b>Base 
Object</b> will be extruded.<br>
It is possible to select in GUI several Base Objects to make several pipes (using Shift button).
\n In this mode the default pipe generation algorithm is used. The pipe
is created so that the <b>angle between the normal vector</b> to
the base shape <b>and the tangent to the path</b> wire remains constant at any point of the
given path.
\n <b>Select unpublished edges</b> checkbox - if checked, allows to select an edge of any other shape as the path object. 
\n The \b Result of the operation will be a GEOM_Object (edge, face, shell,
solid or compsolid).

\n <b>TUI Command:</b> <em>geompy.MakePipe(baseShape, pathShape)</em>
\n <b>Arguments:</b> Name + 1 shape (vertex, edge, planar wire, face or
shell) serving as base object + 1 shape (edge or wire) for
definition of the path.
\n <b>Advanced options</b> \ref preview_anchor "Preview"

\image html pipe.png

<b>Example:</b>

\image html pipe_wire_edgesn.png "Extrusion of a wire"

\n Secondly, you can define the <b>Base
Object</b> (edge, planar wire or face), which will be extruded, 
the <b>Path Object</b> (edge or wire) along which the <b>Base 
Object</b> will be extruded and the <b>BiNormal Vector</b> (edge or
wire).

\n In contrast to the default mode, in this mode the pipe is generated
to preserve the constant <b>angle between the normal vector</b> to the base
shape <b>and the BiNormal vector</b> given as the third argument.
\n <b>Select unpublished edges</b> checkbox - if checked, allows to select an edge of any other shape as the path object. 
\n The \b Result of the operation will be a GEOM_Object (edge, face, shell,
solid or compsolid).

\n <b>TUI Command:</b> <em>geompy.MakePipeBiNormalAlongVector(baseShape, pathShape, binormalShape)</em>
\n <b>Arguments:</b> Name + 1 shape (edge, planar wire or face) 
serving as base object + 1 shape (edge or wire) for
definition of the path + 1 shape (edge or wire) to set a fixed 
BiNormal direction to perform the extrusion.

\image html pipe2.png

<b>Example:</b>

\image html pipebinormalsn.png "Extrusion of a face with BiNormal parameter"

\n Third, to create a shape by extrusion of the profile shapes along the path shape, 
you can define the <b>Base Object</b>s (edges, planar wires, faces or shells), which will be extruded, 
the <b>Locations</b> (vertices that specify locations on the <b>Path Object</b> corresponding to the
specified <b>Base Object</b>s; list of the <b>Locations</b> should be either empty or of the same
length as list of <b>Base Object</b>s) and the <b>Path Object</b> (edge or wire) along which the
<b>Base Object</b> will be extruded.

Additional controls:
- <b>With contact</b> checkbox - if checked, the section is translated to be in contact with the spine.
- <b>With correction</b> checkbox - if checked, the section is rotated to be orthogonal to the spine
tangent in the corresponding point.

\n The \b Result of the operation will be a GEOM_Object (shell or solid).

\n <b>TUI Command:</b> <em>geompy.MakePipeWithDifferentSections(baseShape, locations, pathShape, withContact, withCorrection)</em>
\n <b>Arguments:</b> Name + list of shapes (edges, planar wires, faces or shells) serving as base object + 
list of locations (vertices) on the path corresponding specified list of the shapes + 
1 shape (edge or wire) for definition of the path + 
2 bool parameters (withContact, withCorrection).
\n <b>Advanced options</b> \ref preview_anchor "Preview"

\image html pipe3.png

<b>Example:</b>

\image html pipe3_init.png "Initial objects"

\image html pipe3_init1.png "Extrusion of the profile shapes along the path shape"

Our <b>TUI Scripts</b> provide you with useful examples of creation of
\ref tui_creation_pipe "Complex Geometric Objects".

*/
